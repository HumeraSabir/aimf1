{"version":3,"sources":["webpack:///src/app/register/register.page.ts","webpack:///src/app/register/register.page.html","webpack:///src/app/register/register.module.ts"],"names":["RegisterPage","navCtrl","util","auth","api","isLoading","isMatch","info","especialidade","registro","cpf","nome","sobrenome","whatsapp","email","cep","estado","cidade","endereco","password","confirm_password","console","log","replace","validacep","test","setTimeout","viaCEP","then","res","subscribe","data","localidade","uf","err","proccessError","register","navigateRoot","presentToast","header","message","cepInput","doRegister","selector","templateUrl","styleUrls","routes","path","component","RegisterPageModule","forChild","imports","declarations"],"mappings":"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,EAAA,wI,EAAA,mI,EAAA,qI;AAAA,O;;;cAAZA,Y;AAAY,qC;AAAA,iB;AAAA,gB;AAAA,i1B;AAAA;AAAA;ACZzB;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACA;;AAAI;;AACN;;AAEA;;AACE;;AACA;;AACE;;AACF;;AACA;;AAAuB;AAAA;AAAA;;AAAiC;;AAC1D;;AACA;;AACA;;AACE;;AACA;;AACE;;AACF;;AACA;;AAAuB;AAAA;AAAA;;AAA4B;;AACrD;;AACA;;AACA;;AACE;;AACA;;AACE;;AACF;;AACA;;AAAwB;AAAA;AAAA;;AAAuB;;AACjD;;AACA;;AACA;;AACE;;AACA;;AACE;;AACF;;AACA;;AAAuB;AAAA;AAAA;;AAAwB;;AACjD;;AACA;;AACA;;AACE;;AACA;;AACE;;AACF;;AACA;;AAAuB;AAAA;AAAA;;AAA6B;;AACtD;;AACA;;AACA;;AACE;;AACA;;AACE;;AACF;;AACA;;AAAuB;AAAA;AAAA;;AAA4B;;AACrD;;AACA;;AACA;;AACE;;AACA;;AACE;;AACF;;AACA;;AAAuB;AAAA;AAAA;;AAAyB;;AAClD;;AACA;;AACA;;AACE;;AACA;;AACE;;AACF;;AACA;;AAAsB;AAAA,qBAAS,IAAAyC,QAAA,UAAA1B,GAAA,CAAT;AAA2B,aAA3B,EAA4B,eAA5B,EAA4B;AAAA;AAAA,aAA5B;;AAAoD;;AAC5E;;AACA;;AACA;;AACE;;AACA;;AACE;;AACF;;AACA;;AAAuB;AAAA;AAAA;;AAA0B;;AACnD;;AACA;;AACA;;AACE;;AACA;;AACE;;AACF;;AACA;;AAAuB;AAAA;AAAA;;AAA0B;;AACnD;;AACA;;AACA;;AACE;;AACA;;AACE;;AACF;;AACA;;AAAuB;AAAA;AAAA;;AAA4B;;AACrD;;AACA;;AACA;;AACE;;AACA;;AACE;;AACF;;AACA;;AAA2B;AAAA;AAAA;;AAA4B;;AACzD;;AACA;;AACA;;AACE;;AACA;;AACE;;AACF;;AACA;;AAA2B;AAAA;AAAA;;AAAoC;;AACjE;;AACA;;AACA;;AAEA;;AAAuD;AAAA,qBAAS,IAAA2B,UAAA,EAAT;AAAqB,aAArB;;AACrD;;AACA;;AACF;;AACA;;AACA;;AAAsB;;AAA0C;;AAAwB;;AAAgC;;AAAI;;AAC9H;;AAEF;;AACF;;AACF;;AACF;;AACF;;AAEF;;;;AAnHuC;;AAAA;;AAQA;;AAAA;;AAQC;;AAAA;;AAQD;;AAAA;;AAQA;;AAAA;;AAQA;;AAAA;;AAQA;;AAAA;;AAQ4B;;AAAA;;AAQ5B;;AAAA;;AAQA;;AAAA;;AAQA;;AAAA;;AAQI;;AAAA;;AAQA;;AAAA;;AAEP;;AAAA;;AAId;;AAAA;;AACO;;AAAA;;;;;;;;;wED5GhB1C,Y,EAAY;gBALxB,uDAKwB;iBALd;AACT2C,oBAAQ,EAAE,cADD;AAETC,uBAAW,EAAE,sBAFJ;AAGTC,qBAAS,EAAE,CAAC,sBAAD;AAHF,W;AAKc,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEZzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AASA,UAAMC,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAgBaC,kB;;;;;cAAAA;;;;2BAAAA,kB;AAAkB,S;AAAA,kBARpB,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,6DAAaC,QAAb,CAAsBJ,MAAtB,CAJO,CAQoB;;;;4HAAlBG,kB,EAAkB;AAAA,yBAFd,2DAEc;AAFF,oBALzB,4DAKyB,EAJzB,0DAIyB,EAHzB,0DAGyB,EAHd,4DAGc;AAEE,S;AALhB,O;;;;;wEAKFA,kB,EAAkB;gBAT9B,sDAS8B;iBATrB;AACRE,mBAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,6DAAaD,QAAb,CAAsBJ,MAAtB,CAJO,CADD;AAORM,wBAAY,EAAE,CAAC,2DAAD;AAPN,W;AASqB,U","file":"register-register-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from \"../services/auth.service\";\r\nimport { UtilService } from \"../services/util/util.service\";\r\nimport { ApiService } from \"../services/api/api.service\";\r\nimport { StorageService } from \"../services/storage/storage.service\";\r\nimport { NavController } from \"@ionic/angular\";\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.page.html',\r\n  styleUrls: ['./register.page.scss'],\r\n})\r\nexport class RegisterPage implements OnInit {\r\n  isLoading: boolean = false;\r\n  isMatch: boolean = false;\r\n\r\n  info = {\r\n    especialidade: '',\r\n    registro: '',\r\n    cpf: '',\r\n    nome: '',\r\n    sobrenome: '',\r\n    whatsapp: '',\r\n    email: '',\r\n    cep: '',\r\n    estado: '',\r\n    cidade: '',\r\n    endereco: '',\r\n    password: '',\r\n    confirm_password: ''\r\n  }\r\n\r\n  constructor(public navCtrl: NavController, public util: UtilService,\r\n    public auth: AuthService, public api: ApiService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  cepInput(cep) {\r\n    console.log(\"Entered CEP \", cep);\r\n    var cep = cep.replace(/\\D/g, '');\r\n    if (cep != \"\") {\r\n\r\n      //ExpressÃ£o regular para validar o CEP.\r\n      var validacep = /^[0-9]{8}$/;\r\n\r\n      //Valida o formato do CEP.\r\n      if (validacep.test(cep)) {\r\n        setTimeout(() => {\r\n          this.api.viaCEP(this.info.cep).then((res: any) => {\r\n            if (res) {\r\n              res.subscribe((data) => {\r\n                console.log(\"CEP API  > \", data);\r\n                this.info.cidade = data.localidade;\r\n                this.info.estado = data.uf;\r\n              }, (err) => {\r\n                console.log(err);\r\n                this.api.proccessError(err)\r\n              });\r\n            }\r\n          });\r\n        }, 2000);\r\n      } else {\r\n        console.log(\"CEP not valid\");\r\n      }\r\n    }\r\n  }\r\n\r\n  doRegister() {\r\n    if(this.info.confirm_password != this.info.password){\r\n      this.isMatch = true;\r\n    } else {\r\n      this.isMatch = false;\r\n      this.isLoading = true;\r\n      this.auth.register(this.info).then((res)=>{\r\n        this.isLoading = false;\r\n        console.log(\"Register API \", res);\r\n        this.navCtrl.navigateRoot(['/tabs/dashboard'])\r\n      }).catch((err)=>{\r\n        this.isLoading = false;\r\n        this.util.presentToast({header: 'Ops!', message: err})\r\n        console.log(err);\r\n      });\r\n    }\r\n    // if (this.info.especialidade != '' && this.info.registro != '' && this.info.cpf != '' && this.info.nome != '' && this.info.sobrenome != '' && this.info.whatsapp != '' && this.info.email != '' && this.info.cep != '' && this.info.estado != '' && this.info.endereco != '' && this.info.password != '' && this.info.confirm_password != '') {\r\n      \r\n    // }\r\n  }\r\n}\r\n","<ion-content>\r\n  <section class=\"user-login-area bg-style\">\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n          <div class=\"single-user-area back-shadow\">\r\n            <div class=\"login-area\">\r\n              <div class=\"ion-text-center\">\r\n                <img src=\"../../assets/images/mia-wht.png\">\r\n                <br><br>\r\n              </div>\r\n\r\n              <ion-item color=\"transparent\">\r\n                <ion-icon class=\"side-icon\" slot=\"start\" name=\"person\"></ion-icon>\r\n                <ion-label>\r\n                  Especialidade\r\n                </ion-label>\r\n                <ion-input type=\"text\" [(ngModel)]=\"info.especialidade\"></ion-input>\r\n              </ion-item>\r\n              <br>\r\n              <ion-item color=\"transparent\">\r\n                <ion-icon class=\"side-icon\" slot=\"start\" name=\"person\"></ion-icon>\r\n                <ion-label>\r\n                  Registro\r\n                </ion-label>\r\n                <ion-input type=\"text\" [(ngModel)]=\"info.registro\"></ion-input>\r\n              </ion-item>\r\n              <br>\r\n              <ion-item color=\"transparent\">\r\n                <ion-icon class=\"side-icon\" slot=\"start\" name=\"person\"></ion-icon>\r\n                <ion-label>\r\n                  CPF ou CNPJ\r\n                </ion-label>\r\n                <ion-input type=\"email\" [(ngModel)]=\"info.cpf\"></ion-input>\r\n              </ion-item>\r\n              <br>\r\n              <ion-item color=\"transparent\">\r\n                <ion-icon class=\"side-icon\" slot=\"start\" name=\"person\"></ion-icon>\r\n                <ion-label>\r\n                  Nome\r\n                </ion-label>\r\n                <ion-input type=\"text\" [(ngModel)]=\"info.nome\"></ion-input>\r\n              </ion-item>\r\n              <br>\r\n              <ion-item color=\"transparent\">\r\n                <ion-icon class=\"side-icon\" slot=\"start\" name=\"person\"></ion-icon>\r\n                <ion-label>\r\n                  Sobrenome\r\n                </ion-label>\r\n                <ion-input type=\"text\" [(ngModel)]=\"info.sobrenome\"></ion-input>\r\n              </ion-item>\r\n              <br>\r\n              <ion-item color=\"transparent\">\r\n                <ion-icon class=\"side-icon\" slot=\"start\" name=\"person\"></ion-icon>\r\n                <ion-label>\r\n                  WhatsApp\r\n                </ion-label>\r\n                <ion-input type=\"text\" [(ngModel)]=\"info.whatsapp\"></ion-input>\r\n              </ion-item>\r\n              <br>\r\n              <ion-item color=\"transparent\">\r\n                <ion-icon class=\"side-icon\" slot=\"start\" name=\"person\"></ion-icon>\r\n                <ion-label>\r\n                  E-mail\r\n                </ion-label>\r\n                <ion-input type=\"text\" [(ngModel)]=\"info.email\"></ion-input>\r\n              </ion-item>\r\n              <br>\r\n              <ion-item color=\"transparent\">\r\n                <ion-icon class=\"side-icon\" slot=\"start\" name=\"home\"></ion-icon>\r\n                <ion-label>\r\n                  CEP\r\n                </ion-label>\r\n                <ion-input type=\"tel\" (keyup)=\"cepInput(info.cep)\" [(ngModel)]=\"info.cep\"></ion-input>\r\n              </ion-item>\r\n              <br>\r\n              <ion-item color=\"transparent\">\r\n                <ion-icon class=\"side-icon\" slot=\"start\" name=\"home\"></ion-icon>\r\n                <ion-label>\r\n                  Estado\r\n                </ion-label>\r\n                <ion-input type=\"text\" [(ngModel)]=\"info.estado\"></ion-input>\r\n              </ion-item>\r\n              <br>\r\n              <ion-item color=\"transparent\">\r\n                <ion-icon class=\"side-icon\" slot=\"start\" name=\"home\"></ion-icon>\r\n                <ion-label>\r\n                  Cidade\r\n                </ion-label>\r\n                <ion-input type=\"text\" [(ngModel)]=\"info.cidade\"></ion-input>\r\n              </ion-item>\r\n              <br>\r\n              <ion-item color=\"transparent\">\r\n                <ion-icon class=\"side-icon\" slot=\"start\" name=\"home\"></ion-icon>\r\n                <ion-label>\r\n                  EndereÃ§o\r\n                </ion-label>\r\n                <ion-input type=\"text\" [(ngModel)]=\"info.endereco\"></ion-input>\r\n              </ion-item>\r\n              <br>\r\n              <ion-item color=\"transparent\">\r\n                <ion-icon class=\"side-icon\" slot=\"start\" name=\"lock\"></ion-icon>\r\n                <ion-label>\r\n                  Senha\r\n                </ion-label>\r\n                <ion-input type=\"password\" [(ngModel)]=\"info.password\"></ion-input>\r\n              </ion-item>\r\n              <br>\r\n              <ion-item color=\"transparent\">\r\n                <ion-icon class=\"side-icon\" slot=\"start\" name=\"lock\"></ion-icon>\r\n                <ion-label>\r\n                  Confirmar senha\r\n                </ion-label>\r\n                <ion-input type=\"password\" [(ngModel)]=\"info.confirm_password\"></ion-input>\r\n              </ion-item>\r\n              <p class=\"form-error\" *ngIf=\"isMatch\">senha incorreta</p>\r\n              <br>\r\n\r\n              <ion-button expand=\"block\" shape=\"round\" color=\"light\" (click)=\"doRegister()\">\r\n                <span *ngIf=\"!isLoading\">CADASTRAR</span>\r\n                <ion-spinner *ngIf=\"isLoading\" color=\"dark\"></ion-spinner>\r\n              </ion-button>\r\n              <br>\r\n              <p class=\"term-style\">Ao se cadastrar, vocÃª concorda com nossos <b routerLink=\"/agenda\">Termos e PolÃ­tica de Privacidade</b></p>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n\r\n</ion-content>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { RegisterPage } from './register.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RegisterPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [RegisterPage]\r\n})\r\nexport class RegisterPageModule {}\r\n"]}